name: macOS Release

on:
  push:
    tags:
      - '*'
  workflow_dispatch:
    inputs:
      version:
        description: '版本号 (例如: v1.0)'
        required: true
        default: 'v4.0'

permissions:
  contents: write

jobs:
  release:
    strategy:
      matrix:
        include:
          - os: macos-12  # Intel Mac，支持 macOS 12.x
            arch: x86_64
            runner_arch: intel
          - os: macos-latest  # Apple Silicon Mac
            arch: aarch64  
            runner_arch: arm64
    
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Install dependencies
        run: |
          brew update
          brew install create-dmg
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Build App
        run: |
          # 设置版本号
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION=$(git describe --tags)
          fi
          
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          
          # 更新应用版本号
          sed -i "" "s/v0.0.0/$VERSION/g" ./main.py
          sed -i "" "s/v0.0.0/$VERSION/g" ./setup.py
          
          # 安装依赖
          pip install -r requirements.txt
          pip install py2app
          
          # 生成UI文件
          pyuic5 -o ui.py main.ui
          pyrcc5 -o resource_rc.py resource.qrc
          
          # 使用py2app打包
          python setup.py py2app --arch=${{ matrix.arch }}
          
          # 显示应用内容以便调试
          ls -la dist/cloud-clipboard-go.app/Contents/
          ls -la dist/cloud-clipboard-go.app/Contents/MacOS/
          ls -la dist/cloud-clipboard-go.app/Contents/Resources/
          
      - name: Create DMG
        run: |
          mkdir -p staging
          cp -r "dist/cloud-clipboard-go.app" staging/
          
          create-dmg \
            --volname "cloud-clipboard-go" \
            --volicon "icon.png" \
            --window-pos 200 120 \
            --window-size 600 400 \
            --icon-size 100 \
            --icon "cloud-clipboard-go.app" 175 190 \
            --hide-extension "cloud-clipboard-go.app" \
            --app-drop-link 425 190 \
            "cloud-clipboard-go-${{ env.VERSION }}-${{ matrix.runner_arch }}.dmg" \
            staging/
            
      - name: Create ZIP backup
        run: |
          cd dist
          zip -r "cloud-clipboard-go-${{ env.VERSION }}-macOS-${{ matrix.runner_arch }}.zip" "cloud-clipboard-go.app"
          cd ..
          
      - name: Calculate SHA256
        id: sha256 # 给步骤一个id
        run: |
          DMG_PATH="cloud-clipboard-go-${{ env.VERSION }}-${{ matrix.runner_arch }}.dmg"
          SHA256=$(shasum -a 256 "$DMG_PATH" | awk '{print $1}')
          echo "sha256_value=$SHA256" >> $GITHUB_OUTPUT

      - name: Store SHA256 for Homebrew Tap
        run: |
          mkdir -p artifact
          echo "${{ steps.sha256.outputs.sha256_value }}" > artifact/sha256.txt
          echo "${{ env.VERSION }}" > artifact/version.txt

      - name: Upload SHA256 and Version for ${{ matrix.runner_arch }}
        uses: actions/upload-artifact@v4
        with:
          name: artifact-info-${{ matrix.runner_arch }}
          path: artifact/
      
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.version || github.ref_name }}
          files: |
            cloud-clipboard-go-*-*.dmg
            dist/cloud-clipboard-go-*-macOS-*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-homebrew-tap:
    name: Update Homebrew Tap
    needs: release # 依赖 release 任务
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Intel Artifact
        uses: actions/download-artifact@v4
        with:
          name: artifact-info-intel
          path: ./intel-artifact

      - name: Download ARM Artifact
        uses: actions/download-artifact@v4
        with:
          name: artifact-info-arm64
          path: ./arm-artifact

      - name: Update Tap Repository
        run: |
          # 从下载的工件中读取版本和SHA256
          VERSION=$(cat ./intel-artifact/version.txt)
          SHA256_INTEL=$(cat ./intel-artifact/sha256.txt)
          SHA256_ARM=$(cat ./arm-artifact/sha256.txt)

          echo "Updating to version: $VERSION"
          echo "Intel SHA256: $SHA256_INTEL"
          echo "ARM SHA256: $SHA256_ARM"

          # 克隆tap仓库
          git clone https://x-access-token:${{ secrets.TAP_TOKEN }}@github.com/jonnyan404/homebrew-tap.git
          cd homebrew-tap

          # 创建Casks目录
          mkdir -p Casks

          # 使用项目中的模板文件，并替换所有占位符
          cat ../homebrew/cloud-clipboard-go.rb.template | \
            sed "s/VERSION_PLACEHOLDER/$VERSION/g" | \
            sed "s/SHA256_INTEL_PLACEHOLDER/$SHA256_INTEL/g" | \
            sed "s/SHA256_ARM_PLACEHOLDER/$SHA256_ARM/g" > \
            Casks/cloud-clipboard-go.rb

          # 提交并推送更改
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "GitHub Actions"
          git add Casks/cloud-clipboard-go.rb
          # 检查是否有更改需要提交
          if ! git diff --staged --quiet; then
            git commit -m "Update cloud-clipboard-go to $VERSION"
            git push
          else
            echo "No changes to commit."
          fi
