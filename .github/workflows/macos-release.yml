name: macOS Release

on:
  push:
    tags:
      - '*'
  workflow_dispatch:
    inputs:
      version:
        description: '版本号 (例如: v1.0)'
        required: true
        default: 'v4.0'

permissions:
  contents: write

jobs:
  release:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Install dependencies
        run: |
          brew update
          brew install create-dmg
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Build App
        run: |
          # 设置版本号
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION=$(git describe --tags)
          fi
          
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          
          # 更新应用版本号
          sed -i "" "s/v0.0.0/$VERSION/g" ./main.py
          sed -i "" "s/v0.0.0/$VERSION/g" ./setup.py
          
          # 安装依赖
          pip install -r requirements.txt
          pip install pyinstaller
          pip install py2app
          
          # 生成UI文件
          pyuic5 -o ui.py main.ui
          pyrcc5 -o resource_rc.py resource.qrc
          
          # 使用py2app打包
          python setup.py py2app
          
          # 显示应用内容以便调试
          ls -la dist/cloud-clipboard-go.app/Contents/
          ls -la dist/cloud-clipboard-go.app/Contents/MacOS/
          ls -la dist/cloud-clipboard-go.app/Contents/Resources/

          # # 使用 PyInstaller 构建 macOS 应用
          # pyinstaller --windowed --onedir \
          #   --add-data="icon.png:." \
          #   --add-data="main.ui:." \
          #   --add-data="resource.qrc:." \
          #   --hidden-import=PyQt5.QtCore \
          #   --hidden-import=PyQt5.QtGui \
          #   --hidden-import=PyQt5.QtWidgets \
          #   --icon=icon.png \
          #   -n "cloud-clipboard-go" \
          #   ./main.py

          
      - name: Create DMG
        run: |
          mkdir -p staging
          cp -r "dist/cloud-clipboard-go.app" staging/
          
          create-dmg \
            --volname "cloud-clipboard-go" \
            --volicon "icon.png" \
            --window-pos 200 120 \
            --window-size 600 400 \
            --icon-size 100 \
            --icon "cloud-clipboard-go.app" 175 190 \
            --hide-extension "cloud-clipboard-go.app" \
            --app-drop-link 425 190 \
            "cloud-clipboard-go-${{ env.VERSION }}.dmg" \
            staging/
            
      - name: Create ZIP backup
        run: |
          cd dist
          zip -r "cloud-clipboard-go-${{ env.VERSION }}-macOS.zip" "cloud-clipboard-go.app"
          cd ..
          
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.version || github.ref_name }}
          files: |
            cloud-clipboard-go-*.dmg
            dist/cloud-clipboard-go-*-macOS.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}